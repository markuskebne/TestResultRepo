@using TestResultRepoData

@{
    ViewBag.Title = "Index";
}
<div class="@ViewBag.ResultColorClass">
    <div class="container" style="margin-top: 50px">
        <div class="row">
            <div class="col-sm-6 text-center">
                <h3>@ViewBag.testRun.Name</h3>
            </div>
            <div class="col-sm-6 text-center">
                <h3>@ViewBag.testRun.StartTime</h3>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-sm-12 text-center">
                <h1>@ViewBag.testRun.Result</h1>
            </div>
        </div>
    </div>
    <div class="container" style="margin-bottom: 15px">
        <div class="progress" style="height: 100px">
            <div class="progress-bar bg-success" role="progressbar" style="width: @ViewBag.passedPercent%; line-height: 100px" aria-valuenow=@ViewBag.passedPercent aria-valuemin="0" aria-valuemax="100">@ViewBag.testRun.Passed</div>
            <div class="progress-bar bg-danger" role="progressbar" style="width: @ViewBag.failedPercent%; line-height: 100px" aria-valuenow=@ViewBag.failedPercent aria-valuemin="0" aria-valuemax="100">@ViewBag.testRun.Failed</div>
            <div class="progress-bar bg-warning" role="progressbar" style="width: @ViewBag.inconclusivePercent%; line-height: 100px" aria-valuenow=@ViewBag.inconclusivePercent aria-valuemin="0" aria-valuemax="100"></div>
        </div>
    </div>
    <div class="card-columns" style="column-count: 5">
        @{
            int i = 1;
            foreach (var suite in ViewBag.testRun.TestSuites as ICollection<TestSuite>)
            {
                string resultColor;

                switch (suite.Result)
                {
                    case Result.Passed:
                        resultColor = "bg-success";
                        break;
                    case Result.Failed:
                        resultColor = "bg-danger";
                        break;
                    default:
                        resultColor = "bg-warning";
                        break;
                }

                <div id="@("accordion_" + i)">
                    <div class="card text-white mb-3">
                        <div class="card-header @resultColor" id="@("heading_" + i)" data-toggle="collapse" data-target="@("#collapse_" + i)" aria-expanded="true" aria-controls="@("#collapse_" + i)">@suite.Name</div>

                        <div id="@("collapse_" + i)" class="collapse" aria-labelledby="@("heading_" + i)" data-parent="@("#accordion_" + i)">
                            <div class="card-body">
                                
                                <ul class="list-group list-group-flush">

                                    @foreach (var testcase in suite.TestCases as ICollection<TestCase>)
                                    {
                                        string testresultColor;
                                        switch (testcase.Result)
                                        {
                                            case Result.Passed:
                                                testresultColor = "bg-success";
                                                break;
                                            case Result.Failed:
                                                testresultColor = "bg-danger";
                                                break;
                                            default:
                                                testresultColor = "bg-warning";
                                                break;
                                        }

                                        <li class="@testresultColor list-group-item cardlisttext">@testcase.Name</li>
                                    }

                                </ul>
                                <div class="card-body">
                                    <a class="card-link" href="/@("testsuites?id="+@suite._Id)">Id: @suite._Id</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                i++;
            }
        }
</div>
</div>


