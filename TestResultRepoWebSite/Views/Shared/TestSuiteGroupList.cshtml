@using TestResultRepoData

@{
    var groups = @Model;
    Guid idGuid;
}

<div class="testSuiteGroupList">
    @foreach (var group in groups as ICollection<string>)
    {
        idGuid = Guid.NewGuid();
        <div class="testSuiteGroup">
            <div id="@("accordion_" + idGuid)">
                <div class="card text-white contentLoader">
                    <div class="card-header d-flex flex-row" id="@("heading_" + idGuid)" onclick="renderTestSuiteCardList('@group', '@idGuid')" data-toggle="collapse" data-target="@("#collapse_" + idGuid)" aria-expanded="true" aria-controls="@("#collapse_" + idGuid)">
                        <div class="truncate ">
                            @*<a href="/@("testsuites?id=" + @suite._Id)">@group.Name</a>*@
                            <p>@group</p>
                        </div>
                    </div>


                    <div id="@("collapse_" + idGuid)" class="collapse" aria-labelledby="@("heading_" + idGuid)" data-parent="@("#accordion_" + idGuid)">
                        <div class="card-body">
                            <ul class="list-group list-group-flush">
                                <div id=@("divPartialViewContainer_" + idGuid)>

                                    @*  TestSuiteCardList is rendered here  *@

                                </div>
                            </ul>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    }
</div>
<script>
    function renderTestSuiteCardList(group, idGuid) {
        $.ajax({
            url: '@Url.Action("RenderTestSuiteCardList", "TestSuiteGroupList")',
            type: 'GET',
            data: { 'name': group},
            contentType: 'application/html',
            //data: JSON.stringify(model),
            success: function (content) {
                $('#divPartialViewContainer_' + idGuid).html(content);
            },
            error: function (e) { }
        });  
    }
</script>
