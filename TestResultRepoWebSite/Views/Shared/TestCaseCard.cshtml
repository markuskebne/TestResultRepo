@using System.Text.RegularExpressions
@using TestResultRepoModels

@{
    TestCase testcase = @Model;
    Guid idGuid = Guid.NewGuid();
    bool showDate = ViewBag.showDate ?? true;

    string resultColor;
}

@switch (testcase.Result)
{
    case Result.Passed:
        resultColor = "bg-success";
        break;
    case Result.Failed:
        resultColor = "bg-danger";
        break;
    default:
        resultColor = "bg-warning";
        break;
}

<div class="testCaseCard">
    <div id="@("accordion_" + idGuid)">
        <div class="card text-white">
            <div class="card-header cardlisttext @resultColor d-flex flex-row" id="@("heading_" + idGuid)" data-toggle="collapse" data-target="@("#collapse_" + idGuid)" aria-expanded="true" aria-controls="@("#collapse_" + idGuid)">
                <div class="truncate">
                    <a href="/@("testcases?id=" + @testcase._Id)">@testcase.Name</a>
                </div>   
                @if(showDate)
                {
                    <span class="badge badge-primary ml-auto">@testcase.EndTime.AsDateTime().ToString("yyyy-MM-dd HH:mm")</span>
                }
            </div>
            @if (testcase.Result != Result.Passed)
            {
                <div id="@("collapse_" + idGuid)" class="collapse" aria-labelledby="@("heading_" + idGuid)" data-parent="@("#accordion_" + idGuid)">
                    <div class="card-body">


                        <ul class="list-group list-group-flush carddetailtext">
                            @if (@testcase.Failure.Message != "")
                            {
                                <p>@testcase.Failure.Message</p>
                            }

                            @if (@testcase.Failure.StackTrace != "")
                            {
                                <p style="white-space: pre-line">@testcase.Failure.StackTrace.Replace(" at", Environment.NewLine + "at")</p>
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>
    </div>
</div>